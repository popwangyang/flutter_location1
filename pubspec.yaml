name: flutter_location1
description: "A new Flutter project."
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: '>=3.4.4 <4.0.0'

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter


  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.6
  dio: ^4.0.6
  provider: ^6.0.3
  flutter_svg: ^1.0.3
  fluttertoast: ^8.0.2
  flutter_screenutil: ^5.2.0
  bot_toast: ^4.0.2
  easy_refresh: ^3.3.4
  flutter_spinkit: ^5.1.0
  photo_view: ^0.14.0
  wechat_assets_picker: ^7.0.0
  wechat_camera_picker: ^3.2.0+1
  date_format: ^2.0.6
  package_info: ^2.0.2
  device_info_plus: ^3.0.0
  open_file: ^3.2.1
  url_launcher: ^6.1.4
  flutter_datetime_picker: ^1.5.1
  webview_flutter: ^3.0.4
  fluwx_no_pay: ^3.9.0
  file_picker: ^4.6.0
  receive_sharing_intent: ^1.4.5
  path_drawing: ^1.0.1
  shake_animation_widget: ^3.0.3
  jpush_flutter: ^2.2.3
  lpinyin: ^2.0.3
  scrollable_positioned_list: ^0.2.3
  sticky_headers: ^0.2.0
  umeng_common_sdk: ^1.2.4
  table_calendar: ^3.0.8
  amap_flutter_map: ^3.0.0
  amap_flutter_location: ^3.0.0
  camera: ^0.9.5
  path_provider: ^2.0.2
  shared_preferences: ^2.0.15
  permission_handler: ^9.2.0
  connectivity_plus: ^2.3.3
  flutter_image_compress: ^2.0.0
  image: ^3.1.3
  qr_code_scanner: ^0.4.0
  extended_nested_scroll_view: ^5.0.0
  math_expressions: ^2.4.0
  decimal: ^2.3.3
  flutter_plugins:
    git:
      url: git@gitlab.gzsle.com:gzsle-web/flutter_plugins.git
      ref: "0.0.8bate-4"

  flutter_widget_wangyan:
    git:
      url: https://gitee.com/popwangyan/flutter_widegt_wangyan.git
      ref: "bate-0.0.4+8"
  flutter_wangyan_camera:
    git:
      url: git@gitlab.gzsle.com:wangyan/flutter_wangyan_camera.git
      ref: "bate-0.0.1+2"

dev_dependencies:
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^3.0.0

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/images/
    - assets/files/

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  fonts:
    - family: Roboto-Regular
      fonts:
        - asset: assets/fonts/Roboto-Regular.ttf
    - family: iconfont
      fonts:
        - asset: assets/fonts/iconfont.ttf
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
